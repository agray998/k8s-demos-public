#!/bin/bash
export K8S_VERSION=1.24 #specify a version
export CP_ADDRESS=10.0.136.14 #make sure this matches your CP node internal address
# Bring node to current versions
sudo apt-get update && sudo apt-get upgrade -y

# Add an alias for the local system to /etc/hosts
sudo sh -c "echo $CP_ADDRESS k8scp >> /etc/hosts"

# Set up system for containerd
sudo apt install curl apt-transport-https vim git wget gnupg2 \
  software-properties-common apt-transport-https ca-certificates uidmap -y
sudo modprobe overlay
sudo modprobe br_netfilter

echo "net.bridge.bridge-nf-call-iptables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.ipv4.ip_forward = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.bridge.bridge-nf-call-ip6tables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf

sudo sysctl --system

# install containerd
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt install containerd -y

# Add Kubernetes repo and software 
sudo sh -c "echo 'deb http://apt.kubernetes.io/ kubernetes-xenial main' >> /etc/apt/sources.list.d/kubernetes.list"

curl -s https://packages.cloud.google.com/apt/doc/rpm-package-key.gpg | sudo apt-key add -

sudo apt-get update


sudo apt-get install -y kubeadm=$K8S_VERSION.1-00 kubelet=$K8S_VERSION.1-00 kubectl=$K8S_VERSION.1-00
sudo apt-mark hold kubeadm kubelet kubectl

echo "now running sudo kubeadm init "

sudo 