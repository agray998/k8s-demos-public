#!/bin/bash
export K8S_VERSION=1.27 #specify a version
export CP_ADDRESS= #make sure this matches your CP node internal address
# Bring node to current versions
sudo apt-get update && sudo apt-get upgrade -y

# Add an alias for the local system to /etc/hosts
sudo sh -c "echo $CP_ADDRESS cp k8scp >> /etc/hosts"

# Set up system for containerd
sudo apt install curl apt-transport-https vim git wget gnupg2 \
  software-properties-common lsb-release ca-certificates uidmap -y
sudo modprobe overlay
sudo modprobe br_netfilter

echo "net.bridge.bridge-nf-call-iptables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.ipv4.ip_forward = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.bridge.bridge-nf-call-ip6tables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf

sudo sysctl --system

# install containerd
sudo mkdir -p /etc/apt/keyrings
sudo mkdir -p /etc/containerd
curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
  | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update && sudo apt-get install containerd -y
sudo containerd config default | sudo tee /etc/containerd/config.toml
sudo sed -e 's/SystemdCgroup = false/SystemdCgroup = true/g' -i /etc/containerd/config.toml
sudo systemctl restart containerd

# Add Kubernetes repo and software 
sudo sh -c "echo 'deb http://apt.kubernetes.io/ kubernetes-xenial main' >> /etc/apt/sources.list.d/kubernetes.list"

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpgvim run   | sudo apt-key add -

sudo apt-get update


sudo apt-get install -y kubeadm=$K8S_VERSION.1-00 kubelet=$K8S_VERSION.1-00 kubectl=$K8S_VERSION.1-00
sudo apt-mark hold kubeadm kubelet kubectl

echo "now running sudo kubeadm init "

sudo 