#!/bin/bash
export K8S_VERSION=1.24 #specify a version
export CP_ADDRESS=10.0.136.14 #make sure this matches your CP node internal address
# Bring node to current versions
sudo apt-get update && sudo apt-get upgrade -y

# Add an alias for the local system to /etc/hosts
sudo sh -c "echo $CP_ADDRESS k8scp >> /etc/hosts"

# Set up system for containerd
sudo apt install curl apt-transport-https vim git wget gnupg2 \
  software-properties-common apt-transport-https ca-certificates uidmap -y
sudo modprobe overlay
sudo modprobe br_netfilter

echo "net.bridge.bridge-nf-call-iptables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.ipv4.ip_forward = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf
echo "net.bridge.bridge-nf-call-ip6tables = 1" | sudo tee -a /etc/sysctl.d/kubernetes.conf

sudo sysctl --system

# install containerd
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt install containerd -y

# Add Kubernetes repo and software 
sudo sh -c "echo 'deb http://apt.kubernetes.io/ kubernetes-xenial main' >> /etc/apt/sources.list.d/kubernetes.list"

curl -s https://packages.cloud.google.com/apt/doc/rpm-package-key.gpg | sudo apt-key add -

sudo apt-get update


sudo apt-get install -y kubeadm=$K8S_VERSION.1-00 kubelet=$K8S_VERSION.1-00 kubectl=$K8S_VERSION.1-00
sudo apt-mark hold kubeadm kubelet kubectl

cat << EOF > kubeadm-config.yaml
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: $K8S_VERSION.1
controlPlaneEndpoint: "k8scp:6443"
networking:
  podSubnet: 192.168.0.0/16
EOF

# Now install the cp using the kubeadm.yaml file from tarball
sudo kubeadm init --config=kubeadm-config.yaml --upload-certs | tee kubeadm-init.out

sleep 5

echo "Running the steps explained at the end of the init output for you"

mkdir -p $HOME/.kube

sleep 2

sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

sleep 2

sudo chown $(id -u):$(id -g) $HOME/.kube/config

echo "Apply Calico network plugin from ProjectCalico.org"
echo "If you see an error they may have updated the yaml file"
echo "Use a browser, navigate to the site and find the updated file"

kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/master/manifests/calico.yaml

echo

#make life easier
sudo apt-get install bash-completion -y
echo "source <(kubectl completion bash)" >> $HOME/.bashrc
source ~/.bashrc

# Add Helm to make our life easier
# wget https://get.helm.sh/helm-v3.7.0-linux-amd64.tar.gz
# tar -xf helm-v3.7.0-linux-amd64.tar.gz
# sudo cp linux-amd64/helm /usr/local/bin/

echo
sleep 3
echo "You should see this node in the output below"
echo "It can take up to a minute for node to show Ready status"
echo
kubectl get node
echo
echo
echo "Script finished. Copy the run_this_on_worker script onto your worker node, make it executable and run it"

cp k8sworker run_this_on_worker
tail kubeadm-init.out -n 2 >> run_this_on_worker

