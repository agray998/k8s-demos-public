apiVersion: v1
kind: ConfigMap
metadata:
  name: em-script
data:
  em-script.sh: |
    lines=$(kubectl get pods --selector=immune!=true \
      --output go-template --template \
      '{{range .items}}{{.metadata.name}} {{.metadata.creationTimestamp}} {{.metadata.namespace}}{{"\n"}}{{end}}' | \
      awk '$2 <= "'$(date -d 'now-5 days' -Ins --utc | sed 's/+0000/Z/')'" { print $1 " " $3}')
    array=($lines)
    for((n=0;n<${#array[@]};n+=2)); do kubectl delete pod ${array[n]} -n ${array[n+1]}; done
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: em-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: em-role
rules:
  - apiGroups: [""]
    resources:
      - pods
    verbs:
      - get
      - list
      - delete 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: em-role-to-sa
subjects:
  - kind: ServiceAccount
    name: em-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: em-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: euthanasia-monkey
spec:
  jobTemplate:
    metadata:
      name: euthanasia-monkey
    spec:
      template:
          volumes:
          - name: em-script
            configMap:
              name: em-script
              defaultMode: 0777
          containers:
          - command:
            - bin/bash
            args:
            - -c
            - /em-script/em-script.sh
            image: bitnami/kubectl:1.23
            name: locust
            volumeMounts:
              - mountPath: /em-script
                name: em-script
          restartPolicy: Never
  schedule: '* * * * *' # once per minute (for demo purposes)
