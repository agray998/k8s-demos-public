apiVersion: v1
kind: ServiceAccount
metadata:
  name: janitor-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: delete-jobs
rules:
  - apiGroups: ["batch"]
    resources:
      - jobs
    verbs:
      - get
      - list
      - delete 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: delete-jobs-to-sa
subjects:
  - kind: ServiceAccount
    name: janitor-sa
roleRef:
  kind: Role
  name: delete-jobs
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: janitor-monkey
spec:
  jobTemplate:
    metadata:
      name: janitor-monkey
    spec:
      template:
        spec:
          serviceAccountName: janitor-sa
          containers:
          - image: bitnami/kubectl:1.27
            name: janitor-monkey
            command:
              - "/bin/bash"
            args:
              - "-c"
              - "kubectl delete job $(kubectl get job -o=jsonpath='{.items[?(@.status.succeeded==1)].metadata.name}')"
              # should be status.succeeded==status.completions or something...
          restartPolicy: OnFailure
  schedule: '* * * * *' # once per minute (for demo purposes)
